"""
This module defines prompt templates for extracting insights and generating
Markdown reports using LangChain's PromptTemplate.
"""

from langchain.prompts import PromptTemplate


extract_insights_prompt = PromptTemplate(
    input_variables=["method_graph", "classes_data"],
    template=(
        "You are an expert in business analysis and Python software engineering. "
        "You must extract and summarize all insights about business logic and "
        "functional requirements using the data below.\n\n"
        "Classes and methods, extracted after parsing the codebase:\n"
        "{classes_data}\n\n"
        "Methods directed graph, which is built using AST trees:\n"
        "{method_graph}\n\n"
        "YOU MUST IDENTIFY:\n"
        "- Key functionalities provided by the codebase\n"
        "- Main business processes implemented in the functions\n"
        "- Dependencies and relationships between functions\n"
        "- Any inferred high-level business requirements\n\n"
        "YOU MUST CREATE AND APPEND A TABLE USING INPUT INFORMATION SUCH AS:\n"
        "- Class and method names\n"
        "- Class and method relationships\n"
        "- Method arguments\n"
        "- Any available docstrings and comments\n\n"
        "FORMAT OF THE TABLE:\n"
        "| **File Path** | **Class** | **Methods** | **Arguments** | **Returns** | **Dependencies** | **Functionality** | **Business Process** |\n"
    ),
)

format_markdown_prompt = PromptTemplate(
    input_variables=["collected_insights"],
    template=(
        "You are an expert technical writer. "
        "You must generate a structured Markdown report using the collected insights "
        "about business requirements, key functionalities, and dependencies.\n\n"
        "Collected Insights:\n"
        "{collected_insights}\n\n"
        "The report MUST have the following structure:\n"
        "- ## High-Level Summary of Business Logic\n"
        "    - Which product the given codebase represents\n"
        "    - What the product supports\n"
        "    - Key business requirements in the form of a bullet list\n\n"
        "- ## Breakdown of Functionalities and Corresponding Methods\n"
        "    - List of functionalities with classes and methods specifying the "
        "implementation of each functionality\n"
        "    - Each method must contain a description (if a docstring is available)\n\n"
        "- ## Method Invocation Paths\n"
        "- ## Links to Corresponding Code Files\n"
        "    Add the following text to the section if actual URLs are not available: "
        "(Note: Replace `#` with actual file paths or URLs if available.)\n\n"
        "- ## Summary\n"
        "    Any observations in free form about the codebase, design, and functional purposes\n\n"
        "EXAMPLE:\n\n"
        "# CRM System Codebase Analysis Report\n\n"
        "## High-Level Summary of Business Logic\n"
        "The provided codebase represents...\n\n"
        "---\n\n"
        "## Breakdown of Functionalities and Corresponding Methods\n\n"
        "### 1. ****\n"
        "- **Methods**:\n"
        "    - \n"
        "    - \n"
        "    - \n"
        "- **Classes**:\n\n"
        "### 2. ****\n"
        "- **Methods**:\n"
        "    - \n"
        "    - \n"
        "    - \n"
        "- **Classes**:\n\n"
        "---\n\n"
        "## Method Invocation Paths\n\n"
        "### 1. ****\n"
        "- \n"
        "- \n\n"
        "### 2. ****\n"
        "- \n"
        "- \n\n"
        "---\n\n"
        "## Path to Corresponding Code File\n"
        "- ****: [/dir/filename.py](#)\n"
        "- ****: [/dir/filename.py](#)\n\n"
        "---\n\n"
        "## Conclusion\n"
        "The product is...\n"
    ),
)